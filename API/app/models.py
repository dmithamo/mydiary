from datetime import datetime



class Entry:
    """
        Models an entry as an object with 
        
        Properties :

            entry_id,
            entry_title,
            entry_body,
            entry_tags, and
            entry_timestamp (autogenerated on initialization)

        Methods :

            fetch_all_entries() - returns all entries in entries list,

            fetch_single_entry(entry_id) - returns entry with given 
                entry_id,

            create_entry(*args) - creates an entry with the specified
                properties and appends the entry to entries list
                [*args == all the Properties named above]

            edit_entry(entry_id, **kwargs) - modifies the values of the 
                specified properties for the specified entry_id

            delete_entry(entry_id) - removes the specified entry from
                the list of entries
    """

    # Class variable to store all entries created
    entries = []

    def __init__(
        self, entry_id, entry_title,
        entry_body, entry_tags
    ):
        """ 
            Initialize entry object
        """
        self.entry_id = entry_id
        self.entry_title = entry_title
        self.entry_body = entry_body
        self.entry_tags = entry_tags

        # Store autogenerated timestamp as a formatted str
        self.entry_timestamp = datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S')
    
    def __repr__(self):
        """
            Define schematic for representing an entry. 
            For experimentation in Terminal
        """
        return '< {} : {} >'.format(self.entry_id, self.entry_title)

    def fetch_all_entries(self):
        """
            Retrieve the entire collection of entries
        """
        return self.entries
